AppType=StandardJava
Build1=Default,com.puterise.manifest.writer.nonui
Group=Default Group
Library1=jcore
NumberOfFiles=0
NumberOfLibraries=1
NumberOfModules=0
Version=10.3
@EndOfDesignText@
'Version: 2.10
#Region Project Attributes
#If Debug
#CommandLineArgs: C:\B4X\Development\manifest-writer-non-ui-b4j\release C:\B4X\Development\manifest-writer-non-ui-b4j\release Author Aeric Version add.1
#Else
#CommandLineArgs:
#End If
#MergeLibraries: True
#Macro: Title, Version, ide://run?file=%JAVABIN%\java.exe&Args=-jar&Args=%ADDITIONAL%\..\B4X\manifest-writer-non-ui.jar&Args=%PROJECT%\..\release&Args=%PROJECT%\..\release&Args=Version&Args=add.1
#Macro: Title, Release, ide://run?file=%WINDIR%\SysWOW64\explorer.exe&Args=%PROJECT%\..\release
'#Macro: Title, Copy (B4Xlib), ide://run?file=%COMSPEC%&Args=/c&Args=copy&Args=%PROJECT%\MyClass.bas&Args=%PROJECT%\..\release\MyClass.bas
'#Macro: Title, Publish (B4Xlib), ide://run?file=%JAVABIN%\jar.exe&WorkingDirectory=..\..\release&Args=-cMf&Args=%ADDITIONAL%\%PROJECT_NAME%.b4xlib&Args=*
#If Release
#CustomBuildAction: 2, %COMSPEC%, /c copy %PROJECT%\Objects\result.jar %ADDITIONAL%\..\B4X\manifest-writer-non-ui.jar
#End If
#End Region

Sub Process_Globals

End Sub

Sub AppStart (Args() As String)
	Log("Manifest writer v2.10 started...")
	Log("Reading args...")
	For i = 0 To Args.Length - 1
		Args(i) = Args(i).Replace("%20", " ")
		Log($"${i+1}: ${Args(i)}"$)
	Next
	If Args.Length < 2 Then
		Log("No source and destination")
		Log("Manifest writer ended")
		ExitApplication
	End If
	Dim items As Map
	items.Initialize
	Dim Source As String = Args(0)
	' Create an empty file if not exist
	If File.Exists(Source, "manifest.txt") = False Then
		File.MakeDir(Source, "")
		File.WriteString(Source, "manifest.txt", "")
	End If
	Dim lines As List
	lines = File.ReadList(Source, "manifest.txt")
	For Each line As String In lines
		Dim entry() As String = Regex.Split("=", line)
		If entry.Length = 1 Then
			items.Put(entry(0), "")
		Else If entry.Length = 2 Then
			items.Put(entry(0), entry(1))
		End If
	Next
	Select Args.Length
		Case 2
			Log("No changes")
		Case 4, 6, 8, 10
			For i = 2 To Args.Length - 1 Step 2 ' start from 3rd parameter
				'Log(Args(i) & " = " & Args(i+1))
				' Auto increment version
				If Args(i) = "Version" And Args(i+1).StartsWith("add") Then
					Dim CurrentVersion As Float = IIf(items.GetDefault("Version", "") = "", 0, items.Get("Version"))
					'Log(Args(i+1).SubString(3))
					Dim increment As Float = Args(i+1).SubString(3)
					Dim NewVersion As String = NumberFormat2(CurrentVersion + increment, 1, 2, 2, False)
					'Log(CurrentVersion)
					'Log(NewVersion)
					items.Put(Args(i), NewVersion)
				Else
					items.Put(Args(i), Args(i+ 1))
				End If
			Next
		Case Else
			Log("Invalid number or arguments")
			Log("Manifest writer ended")
			ExitApplication
	End Select
	Dim Destination As String = Args(1)
	File.MakeDir(Destination, "")
	Log("Updated entries:")
	For Each Key As String In items.Keys
		Log($"${Key}=${items.Get(Key)}"$)
	Next
	Dim SB As StringBuilder
	SB.Initialize
	For Each Key As String In items.Keys
		SB.Append($"${Key}=${items.Get(Key)}"$).Append(CRLF)
	Next
	File.WriteString(Destination, "manifest.txt", SB.ToString.Trim)
	Log("Manifest writer ended")
	ExitApplication
End Sub